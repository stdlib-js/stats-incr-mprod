// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import{isPrimitive as e}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@v0.1.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@v0.1.1-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-infinite@v0.1.1-esm/index.mjs";import{assign as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-frexp@v0.1.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ldexp@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/array-float64@v0.1.1-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";function m(e,s,t){return r(t,e,1,0),s.frac*=e[0],s.exp+=e[1],s.frac>-.5&&s.frac<.5&&(r(s.frac,e,1,0),s.frac=e[0],s.exp+=e[1]),i(s.frac,s.exp)}function d(r){var i,d,f,p,l,o;if(!e(r))throw new TypeError(a("invalid argument. Must provide a positive integer. Value: `%s`.",r));return f=new n(r),o=-1,l=0,i=[0,0],d=1,(p={}).frac=.5,p.exp=1,function(e){var n,a;if(0===arguments.length)return 0===l?null:d;if(o=(o+1)%r,s(e))l=r,d=NaN;else if(l<r)l+=1,d=m(i,p,e);else if(0===f[o]||s(f[o])||t(f[o])){for(l=1,p.frac=.5,p.exp=1,m(i,p,e),n=0;n<r;n++)if(n!==o){if(a=f[n],s(a)){l=r,d=NaN;break}l+=1,d=m(i,p,a)}}else!1===s(d)&&(a=e/f[o],d=m(i,p,a));return f[o]=e,d}}export{d as default};
//# sourceMappingURL=index.mjs.map
